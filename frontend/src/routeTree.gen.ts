/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ModlistsIndexRouteImport } from './routes/modlists.index'
import { Route as ModlistsIdRouteImport } from './routes/modlists.$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ModlistsIndexRoute = ModlistsIndexRouteImport.update({
  id: '/modlists/',
  path: '/modlists/',
  getParentRoute: () => rootRouteImport,
} as any)
const ModlistsIdRoute = ModlistsIdRouteImport.update({
  id: '/modlists/$id',
  path: '/modlists/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/modlists/$id': typeof ModlistsIdRoute
  '/modlists': typeof ModlistsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/modlists/$id': typeof ModlistsIdRoute
  '/modlists': typeof ModlistsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/modlists/$id': typeof ModlistsIdRoute
  '/modlists/': typeof ModlistsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/modlists/$id' | '/modlists'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/modlists/$id' | '/modlists'
  id: '__root__' | '/' | '/modlists/$id' | '/modlists/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ModlistsIdRoute: typeof ModlistsIdRoute
  ModlistsIndexRoute: typeof ModlistsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/modlists/': {
      id: '/modlists/'
      path: '/modlists'
      fullPath: '/modlists'
      preLoaderRoute: typeof ModlistsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/modlists/$id': {
      id: '/modlists/$id'
      path: '/modlists/$id'
      fullPath: '/modlists/$id'
      preLoaderRoute: typeof ModlistsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ModlistsIdRoute: ModlistsIdRoute,
  ModlistsIndexRoute: ModlistsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
